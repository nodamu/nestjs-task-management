var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.251,1,1.463]],["body/modules/AppModule.html",[0,1.928,1,2.592,2,1.267,3,1.267,4,1.75,5,1.75,6,1.267,7,1.75,8,1.75,9,2.11,10,2.11,11,2.217,12,0.057,13,2.356,14,1.75,15,1.75,16,0.683,17,0.576,18,0.576,19,2.656,20,2.84,21,1.305,22,1.089,23,2.656,24,2.11,25,1.482,26,1.75,27,2.656,28,2.656,29,0.683,30,0.093,31,0.03,32,0.041,33,0.03]],["title/classes/CreateTaskDto.html",[30,0.092,34,1.251]],["body/classes/CreateTaskDto.html",[12,0.055,16,0.787,17,0.664,18,0.664,29,0.787,30,0.107,31,0.035,32,0.044,33,0.035,34,1.873,35,1.255,36,3.441,37,2.432,38,0.664,39,2.189,40,2.417,41,2.855,42,1.185,43,2.18,44,1.609,45,3.061,46,3.061]],["title/classes/GetTaskFilterDto.html",[30,0.092,47,1.251]],["body/classes/GetTaskFilterDto.html",[12,0.057,16,0.66,17,0.557,18,0.557,21,1.055,29,0.66,30,0.122,31,0.029,32,0.04,33,0.029,35,1.052,38,0.557,39,1.949,42,1.055,43,1.667,44,1.432,47,1.667,48,3.155,49,1.287,50,2.039,51,3.155,52,1.628,53,2.302,54,2.567,55,2.567,56,1.628,57,2.567,58,2.567,59,1.692,60,3.971,61,2.567,62,3.494,63,2.039,64,2.567,65,2.039,66,2.039]],["title/classes/Task.html",[30,0.092,49,0.792]],["body/classes/Task.html",[12,0.057,16,0.591,17,0.499,18,0.499,21,0.977,29,0.591,30,0.08,31,0.026,32,0.037,33,0.026,35,0.942,38,0.499,39,1.805,40,2.09,41,2.468,42,1.228,43,1.94,44,1.667,49,1.131,52,1.535,53,2.679,56,1.535,59,1.515,67,1.826,68,2.571,69,3.746,70,2.468,71,4.567,72,2.298,73,2.133,74,3.746,75,2.298,76,2.298,77,2.298,78,3.236,79,1.515]],["title/classes/TaskRepository.html",[30,0.092,80,1.251]],["body/classes/TaskRepository.html",[12,0.056,16,0.837,17,0.706,18,0.706,21,1.232,29,0.837,30,0.114,31,0.037,32,0.046,33,0.037,35,1.334,49,0.983,68,3.242,79,2.145,80,1.947,81,2.586,82,3.541,83,3.256,84,2.145,85,3.256]],["title/classes/TaskValidationPipe.html",[30,0.092,86,1.463]],["body/classes/TaskValidationPipe.html",[12,0.058,16,0.497,17,0.419,18,0.419,21,0.862,22,0.792,29,0.497,30,0.068,31,0.022,32,0.032,33,0.022,35,0.792,38,0.419,39,1.593,42,1.026,44,1.392,49,0.584,52,1.717,56,0.792,59,1.274,65,2.269,66,2.269,86,1.593,87,2.98,88,1.535,89,2.856,90,3.396,91,3.396,92,3.396,93,1.882,94,2.698,95,2.856,96,2.856,97,1.535,98,2.472,99,2.269,100,1.933,101,2.856,102,1.933,103,1.882,104,1.882,105,1.882,106,1.882,107,1.933,108,2.856,109,1.933,110,1.933,111,1.933,112,1.933,113,1.933,114,1.535,115,1.078,116,1.933,117,1.933,118,1.882,119,1.535,120,2.856,121,1.933,122,1.535]],["title/controllers/TasksController.html",[123,1.463,124,1.463]],["body/controllers/TasksController.html",[12,0.06,16,0.421,17,0.355,18,0.355,21,1.188,22,0.671,29,0.421,30,0.057,31,0.019,32,0.029,33,0.019,34,1.466,38,0.355,42,0.494,43,1.202,44,0.671,47,1.202,49,1.042,52,1.259,53,1.079,56,0.671,70,2.274,73,2.025,84,1.079,86,1.406,93,1.661,103,1.079,104,1.079,105,1.079,106,1.079,115,0.914,118,2.455,123,0.914,124,1.406,125,1.301,126,1.301,127,1.638,128,1.301,129,2.002,130,1.301,131,2.52,132,1.638,133,2.002,134,1.638,135,2.52,136,2.52,137,1.638,138,1.638,139,1.638,140,1.638,141,1.638,142,2.52,143,1.259,144,1.301,145,1.301,146,1.301,147,1.638,148,1.638,149,1.301,150,1.301,151,1.638,152,1.638,153,1.638,154,1.301,155,1.638,156,1.638,157,1.638,158,1.638,159,1.638,160,1.638,161,1.638,162,1.638,163,1.638,164,1.638,165,1.638,166,1.638,167,1.638,168,1.638,169,1.638]],["title/modules/TasksModule.html",[0,1.251,11,1.251]],["body/modules/TasksModule.html",[0,1.863,2,1.185,3,1.185,4,1.637,5,1.637,6,1.185,7,2.573,8,1.637,11,2.173,12,0.058,13,2.251,14,1.637,15,1.637,16,0.639,17,0.539,18,0.539,20,1.973,21,1.331,22,1.018,24,1.973,25,1.386,29,0.639,30,0.087,31,0.028,32,0.039,33,0.028,80,1.185,124,2.178,125,2.714,143,1.867,144,1.973,170,1.973,171,1.973,172,2.484,173,2.484,174,1.973,175,2.484]],["title/injectables/TasksService.html",[143,1.075,176,1.463]],["body/injectables/TasksService.html",[12,0.06,16,0.325,17,0.274,18,0.274,21,1.062,22,0.518,25,0.706,29,0.325,30,0.044,31,0.014,32,0.023,33,0.014,34,1.238,38,0.274,40,1.146,41,1.354,42,0.62,43,0.98,44,0.842,47,0.98,49,1.293,51,1.632,52,1.442,56,0.518,70,1.968,73,1.71,80,1.679,84,0.834,93,1.354,94,1.005,99,1.005,103,1.354,104,1.354,105,1.354,106,0.834,114,1.005,115,0.706,118,2.165,119,2.795,128,2.373,129,1.632,130,1.632,133,1.632,143,0.842,145,1.005,146,1.005,149,1.005,150,1.005,154,1.005,174,1.005,176,1.146,177,1.265,178,1.005,179,2.594,180,2.054,181,1.265,182,1.265,183,1.265,184,1.265,185,1.265,186,1.265,187,1.265,188,2.054,189,1.265,190,1.265,191,1.265,192,2.054,193,1.265,194,1.265,195,1.265,196,3.285,197,1.265,198,1.265,199,1.265,200,1.265,201,1.265,202,1.265,203,1.265,204,1.265,205,2.054,206,1.265,207,1.265,208,1.265,209,1.265]],["title/coverage.html",[210,2.336]],["body/coverage.html",[6,1.198,12,0.056,18,0.545,26,1.655,30,0.155,31,0.028,32,0.039,33,0.028,34,1.198,36,1.995,37,1.995,42,0.758,47,1.198,48,1.995,49,1.039,50,1.995,52,1.029,67,1.995,80,1.198,81,1.995,86,1.401,87,1.995,88,1.995,115,1.401,123,1.401,124,1.401,126,1.995,143,1.029,176,1.401,178,1.995,210,1.655,211,2.511,212,2.511,213,2.511,214,1.995,215,2.511,216,4.835,217,3.926,218,1.995,219,2.511,220,3.926,221,2.511,222,2.511,223,2.511,224,2.511,225,2.511]],["title/dependencies.html",[3,1.5,226,2.207]],["body/dependencies.html",[3,1.405,12,0.058,22,1.207,25,1.642,30,0.134,31,0.033,32,0.043,33,0.033,63,2.339,79,1.94,227,2.944,228,2.944,229,4.252,230,2.944,231,2.944,232,2.944,233,2.944,234,2.944,235,2.944,236,2.944,237,2.944,238,2.944,239,2.944,240,2.944,241,2.944,242,2.944,243,2.944,244,2.944,245,2.944,246,2.944]],["title/miscellaneous/enumerations.html",[247,0.905,248,2.498]],["body/miscellaneous/enumerations.html",[12,0.055,31,0.038,32,0.047,33,0.038,38,0.732,56,1.711,98,2.986,247,1.383,248,2.681,249,3.375,250,4.173,251,3.375,252,3.315,253,4.173,254,4.173]],["title/miscellaneous/functions.html",[247,0.905,255,2.498]],["body/miscellaneous/functions.html",[6,2.258,12,0.05,31,0.042,32,0.05,33,0.042,38,0.809,218,2.963,247,1.529,255,2.963,256,3.729]],["title/index.html",[38,0.479,257,2.207,258,2.207]],["body/index.html",[12,0.056,17,0.475,31,0.025,32,0.035,33,0.025,40,1.221,82,1.739,210,1.443,252,1.739,259,2.189,260,2.189,261,3.127,262,2.189,263,2.189,264,2.189,265,2.189,266,2.189,267,2.189,268,2.189,269,2.189,270,2.189,271,3.647,272,2.189,273,2.189,274,2.189,275,4.504,276,2.189,277,2.189,278,2.189,279,4.375,280,2.189,281,2.189,282,3.127,283,2.189,284,2.189,285,2.189,286,2.189,287,3.127,288,3.127,289,2.189,290,2.189,291,2.189,292,3.127,293,3.127,294,2.189,295,2.189,296,2.189,297,2.189,298,1.739,299,2.189,300,2.189,301,2.189,302,2.189,303,2.189,304,2.189,305,2.189,306,2.189,307,2.189,308,2.189,309,2.189,310,2.189,311,2.189,312,2.189,313,2.189,314,2.189,315,2.189,316,2.189]],["title/modules.html",[2,1.691]],["body/modules.html",[1,2.031,2,1.737,11,1.737,12,0.05,31,0.041,32,0.05,33,0.041,298,3.472,317,4.371,318,4.371,319,4.371]],["title/overview.html",[320,2.816]],["body/overview.html",[0,1.432,1,2.53,2,1.432,3,1.432,4,1.978,5,1.978,6,1.432,7,1.978,8,1.978,9,2.384,10,2.384,11,2.24,12,0.051,13,2.554,14,1.978,15,1.978,31,0.034,32,0.044,33,0.034,35,1.23,122,3.079,123,1.674,143,1.759,170,2.384,171,2.384,176,1.674,320,2.384,321,3.001,322,3.001]],["title/miscellaneous/variables.html",[247,0.905,323,2.498]],["body/miscellaneous/variables.html",[12,0.056,26,2.631,31,0.036,32,0.045,33,0.036,38,0.682,42,1.206,97,2.498,98,2.072,214,2.498,247,1.289,323,2.498,324,3.145,325,3.145,326,3.993,327,3.145,328,3.145,329,3.145,330,3.145,331,3.145,332,3.145,333,3.145,334,3.145,335,3.145,336,3.145,337,3.145,338,3.145]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":216,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["0.10.0",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["0.2.18",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":223,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":122,"title":{},"body":{"classes/TaskValidationPipe.html":{},"overview.html":{}}}],["15.1.1",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":321,"title":{},"body":{"overview.html":{}}}],["2.6.2",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":322,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["7.12.1",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedstatuses",{"_index":92,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["amazing",{"_index":299,"title":{},"body":{"index.html":{}}}],["angular",{"_index":270,"title":{},"body":{"index.html":{}}}],["app",{"_index":277,"title":{},"body":{"index.html":{}}}],["applications",{"_index":267,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":110,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["async",{"_index":179,"title":{},"body":{"injectables/TasksService.html":{}}}],["author",{"_index":309,"title":{},"body":{"index.html":{}}}],["await",{"_index":197,"title":{},"body":{"injectables/TasksService.html":{}}}],["backers",{"_index":300,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":111,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["badrequestexception(`\"${value",{"_index":116,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["baseentity",{"_index":69,"title":{},"body":{"classes/Task.html":{}}}],["body",{"_index":134,"title":{},"body":{"controllers/TasksController.html":{}}}],["body('status",{"_index":168,"title":{},"body":{"controllers/TasksController.html":{}}}],["boolean",{"_index":107,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":319,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":317,"title":{},"body":{"modules.html":{}}}],["building",{"_index":262,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":35,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":170,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":171,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["column",{"_index":71,"title":{},"body":{"classes/Task.html":{}}}],["config/typeorm.config",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":119,"title":{},"body":{"classes/TaskValidationPipe.html":{},"injectables/TasksService.html":{}}}],["constructor",{"_index":180,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(private",{"_index":152,"title":{},"body":{"controllers/TasksController.html":{}}}],["constructor(taskrepository",{"_index":181,"title":{},"body":{"injectables/TasksService.html":{}}}],["controller",{"_index":123,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('tasks",{"_index":151,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllers",{"_index":125,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["coverage",{"_index":210,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createtask(@body",{"_index":161,"title":{},"body":{"controllers/TasksController.html":{}}}],["createtask(createtaskdto",{"_index":200,"title":{},"body":{"injectables/TasksService.html":{}}}],["createtaskdto",{"_index":34,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["database",{"_index":332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":53,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"controllers/TasksController.html":{}}}],["default",{"_index":97,"title":{},"body":{"classes/TaskValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["delete",{"_index":137,"title":{},"body":{"controllers/TasksController.html":{}}}],["delete('/:id",{"_index":163,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask(@param",{"_index":164,"title":{},"body":{"controllers/TasksController.html":{}}}],["deletetask(id",{"_index":203,"title":{},"body":{"injectables/TasksService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":40,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/Task.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["development",{"_index":278,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto/create",{"_index":145,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["dto/get",{"_index":149,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["e2e",{"_index":289,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":263,"title":{},"body":{"index.html":{}}}],["entities",{"_index":334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":78,"title":{},"body":{"classes/Task.html":{}}}],["entity.{js,ts",{"_index":336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":83,"title":{},"body":{"classes/TaskRepository.html":{}}}],["entityrepository(task",{"_index":85,"title":{},"body":{"classes/TaskRepository.html":{}}}],["enumerations",{"_index":248,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["express",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":68,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{}}}],["file",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["filter.dto",{"_index":150,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["filter.dto.ts",{"_index":50,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:11",{"_index":55,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["filter.dto.ts:7",{"_index":58,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["filterdto",{"_index":154,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["found",{"_index":196,"title":{},"body":{"injectables/TasksService.html":{}}}],["found.id",{"_index":208,"title":{},"body":{"injectables/TasksService.html":{}}}],["framework",{"_index":261,"title":{},"body":{"index.html":{}}}],["function",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":255,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:id",{"_index":131,"title":{},"body":{"controllers/TasksController.html":{}}}],["getalltasks",{"_index":187,"title":{},"body":{"injectables/TasksService.html":{}}}],["getalltasks(@query",{"_index":153,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid",{"_index":129,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskbyid(@param('id",{"_index":158,"title":{},"body":{"controllers/TasksController.html":{}}}],["gettaskbyid(id",{"_index":130,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["gettaskfilterdto",{"_index":47,"title":{"classes/GetTaskFilterDto.html":{}},"body":{"classes/GetTaskFilterDto.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["gettaskwithfilters(filterdto",{"_index":189,"title":{},"body":{"injectables/TasksService.html":{}}}],["getting",{"_index":257,"title":{"index.html":{}},"body":{}}],["grow",{"_index":295,"title":{},"body":{"index.html":{}}}],["hapi/joi",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["heavily",{"_index":268,"title":{},"body":{"index.html":{}}}],["here",{"_index":306,"title":{},"body":{"index.html":{}}}],["host",{"_index":327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":313,"title":{},"body":{"index.html":{}}}],["id",{"_index":70,"title":{},"body":{"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["identifier",{"_index":212,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":120,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["implements",{"_index":89,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["import",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["in_progress",{"_index":253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["injectable",{"_index":176,"title":{"injectables/TasksService.html":{}},"body":{"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":177,"title":{},"body":{"injectables/TasksService.html":{}}}],["injectrepository",{"_index":185,"title":{},"body":{"injectables/TasksService.html":{}}}],["injectrepository(taskrepository",{"_index":186,"title":{},"body":{"injectables/TasksService.html":{}}}],["inspired",{"_index":269,"title":{},"body":{"index.html":{}}}],["installation",{"_index":274,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":276,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":117,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["isin",{"_index":61,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isin([taskstatus.open",{"_index":64,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isnotempty",{"_index":62,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isoptional",{"_index":60,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isoptional()@isin(undefined",{"_index":57,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isoptional()@isnotempty",{"_index":54,"title":{},"body":{"classes/GetTaskFilterDto.html":{}}}],["isstatusvalid",{"_index":95,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["isstatusvalid(status",{"_index":101,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["join",{"_index":302,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":310,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["license",{"_index":316,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":293,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":93,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["miscellaneous",{"_index":247,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":292,"title":{},"body":{"index.html":{}}}],["mode",{"_index":282,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":305,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":311,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["nest",{"_index":271,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":315,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["node.js",{"_index":260,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":184,"title":{},"body":{"injectables/TasksService.html":{}}}],["notfoundexception(`task",{"_index":199,"title":{},"body":{"injectables/TasksService.html":{}}}],["npm",{"_index":275,"title":{},"body":{"index.html":{}}}],["number",{"_index":73,"title":{},"body":{"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["object.keys(filterdto).length",{"_index":155,"title":{},"body":{"controllers/TasksController.html":{}}}],["open",{"_index":252,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["optional",{"_index":105,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["osafo",{"_index":331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["out",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["overview",{"_index":320,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":226,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":136,"title":{},"body":{"controllers/TasksController.html":{}}}],["parameters",{"_index":103,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["parseintpipe",{"_index":142,"title":{},"body":{"controllers/TasksController.html":{}}}],["password",{"_index":330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":138,"title":{},"body":{"controllers/TasksController.html":{}}}],["patch('/:id/status",{"_index":166,"title":{},"body":{"controllers/TasksController.html":{}}}],["pg",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["pipes/task",{"_index":147,"title":{},"body":{"controllers/TasksController.html":{}}}],["pipetransform",{"_index":90,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["please",{"_index":303,"title":{},"body":{"index.html":{}}}],["post",{"_index":135,"title":{},"body":{"controllers/TasksController.html":{}}}],["postgres",{"_index":326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/TasksController.html":{}}}],["primarygeneratedcolumn",{"_index":74,"title":{},"body":{"classes/Task.html":{}}}],["private",{"_index":94,"title":{},"body":{"classes/TaskValidationPipe.html":{},"injectables/TasksService.html":{}}}],["production",{"_index":284,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":259,"title":{},"body":{"index.html":{}}}],["project",{"_index":294,"title":{},"body":{"index.html":{}}}],["promise",{"_index":133,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["properties",{"_index":39,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["query",{"_index":141,"title":{},"body":{"controllers/TasksController.html":{}}}],["read",{"_index":304,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":91,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["reflect",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":82,"title":{},"body":{"classes/TaskRepository.html":{},"index.html":{}}}],["reset",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["result",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":118,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["returns",{"_index":106,"title":{},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["rimraf",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":279,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":264,"title":{},"body":{"index.html":{}}}],["search",{"_index":51,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"injectables/TasksService.html":{}}}],["server",{"_index":265,"title":{},"body":{"index.html":{}}}],["side",{"_index":266,"title":{},"body":{"index.html":{}}}],["source",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"index.html":{}}}],["sponsors",{"_index":297,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task",{"_index":249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typeorm.config.ts",{"_index":324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":19,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/typeorm.config.ts",{"_index":214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":218,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/tasks/dto/create",{"_index":36,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/dto/get",{"_index":48,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"coverage.html":{}}}],["src/tasks/pipes/task",{"_index":87,"title":{},"body":{"classes/TaskValidationPipe.html":{},"coverage.html":{}}}],["src/tasks/task",{"_index":251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/tasks/task.repository.ts",{"_index":81,"title":{},"body":{"classes/TaskRepository.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":126,"title":{},"body":{"controllers/TasksController.html":{},"coverage.html":{}}}],["src/tasks/tasks.controller.ts:34",{"_index":132,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/tasks/tasks.entity.ts",{"_index":67,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["src/tasks/tasks.entity.ts:10",{"_index":77,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.entity.ts:13",{"_index":72,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.entity.ts:16",{"_index":76,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.entity.ts:7",{"_index":75,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.module.ts",{"_index":172,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":178,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:34",{"_index":183,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:8",{"_index":182,"title":{},"body":{"injectables/TasksService.html":{}}}],["start",{"_index":280,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":283,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":285,"title":{},"body":{"index.html":{}}}],["started",{"_index":258,"title":{"index.html":{}},"body":{}}],["starter",{"_index":273,"title":{},"body":{"index.html":{}}}],["statements",{"_index":213,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":52,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["status.enum",{"_index":59,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{}}}],["status.enum.ts",{"_index":250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":307,"title":{},"body":{"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["support",{"_index":298,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":318,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":225,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":224,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":49,"title":{"classes/Task.html":{}},"body":{"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskRepository.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["task.description.includes(search",{"_index":195,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.dto",{"_index":146,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["task.dto.ts",{"_index":37,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.dto.ts:2",{"_index":46,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.dto.ts:3",{"_index":45,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["task.id",{"_index":207,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.repository",{"_index":174,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["task.status",{"_index":192,"title":{},"body":{"injectables/TasksService.html":{}}}],["task.title.includes(search",{"_index":194,"title":{},"body":{"injectables/TasksService.html":{}}}],["taskmanagement",{"_index":333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskrepository",{"_index":80,"title":{"classes/TaskRepository.html":{}},"body":{"classes/TaskRepository.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{}}}],["tasks",{"_index":128,"title":{},"body":{"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":173,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.entity",{"_index":84,"title":{},"body":{"classes/TaskRepository.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{}}}],["tasks.filter",{"_index":193,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.filter(task",{"_index":191,"title":{},"body":{"injectables/TasksService.html":{}}}],["tasks.service",{"_index":144,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":124,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":11,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":143,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["taskstatus",{"_index":56,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.done",{"_index":66,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/TaskValidationPipe.html":{}}}],["taskstatus.in_progress",{"_index":65,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"classes/TaskValidationPipe.html":{}}}],["taskstatus.open",{"_index":99,"title":{},"body":{"classes/TaskValidationPipe.html":{},"injectables/TasksService.html":{}}}],["taskvalidationpipe",{"_index":86,"title":{"classes/TaskValidationPipe.html":{}},"body":{"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"coverage.html":{}}}],["test",{"_index":288,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":291,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":290,"title":{},"body":{"index.html":{}}}],["tests",{"_index":287,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":296,"title":{},"body":{"index.html":{}}}],["this.allowedstatuses.indexof(status",{"_index":121,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["this.getalltasks",{"_index":190,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.gettaskbyid(id",{"_index":205,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.isstatusvalid(value",{"_index":113,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["this.taskrepository.findone(id",{"_index":198,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks",{"_index":188,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.filter(task",{"_index":206,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasks.push(task",{"_index":202,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.tasksservice.createtask(createtaskdto",{"_index":162,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.deletetask(id",{"_index":165,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.getalltasks",{"_index":157,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskbyid(id",{"_index":159,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.gettaskwithfilters(filterdto",{"_index":156,"title":{},"body":{"controllers/TasksController.html":{}}}],["this.tasksservice.updatetask(id",{"_index":169,"title":{},"body":{"controllers/TasksController.html":{}}}],["throw",{"_index":114,"title":{},"body":{"classes/TaskValidationPipe.html":{},"injectables/TasksService.html":{}}}],["title",{"_index":41,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/Task.html":{},"injectables/TasksService.html":{}}}],["touch",{"_index":308,"title":{},"body":{"index.html":{}}}],["transform",{"_index":96,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["transform(value",{"_index":108,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["transformer",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":314,"title":{},"body":{"index.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/GetTaskFilterDto.html":{},"classes/Task.html":{},"classes/TaskValidationPipe.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":79,"title":{},"body":{"classes/Task.html":{},"classes/TaskRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["typeormmodule.forfeature([taskrepository",{"_index":175,"title":{},"body":{"modules/TasksModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":272,"title":{},"body":{"index.html":{}}}],["unit",{"_index":286,"title":{},"body":{"index.html":{}}}],["updatetask",{"_index":167,"title":{},"body":{"controllers/TasksController.html":{}}}],["updatetask(id",{"_index":209,"title":{},"body":{"injectables/TasksService.html":{}}}],["usepipes",{"_index":139,"title":{},"body":{"controllers/TasksController.html":{}}}],["usepipes(validationpipe",{"_index":160,"title":{},"body":{"controllers/TasksController.html":{}}}],["username",{"_index":329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":201,"title":{},"body":{"injectables/TasksService.html":{}}}],["validation.pipe",{"_index":148,"title":{},"body":{"controllers/TasksController.html":{}}}],["validation.pipe.ts",{"_index":88,"title":{},"body":{"classes/TaskValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:14",{"_index":109,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["validation.pipe.ts:22",{"_index":102,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["validation.pipe.ts:9",{"_index":100,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["validationpipe",{"_index":140,"title":{},"body":{"controllers/TasksController.html":{}}}],["validator",{"_index":63,"title":{},"body":{"classes/GetTaskFilterDto.html":{},"dependencies.html":{}}}],["value",{"_index":98,"title":{},"body":{"classes/TaskValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.touppercase",{"_index":112,"title":{},"body":{"classes/TaskValidationPipe.html":{}}}],["variable",{"_index":215,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":323,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":204,"title":{},"body":{"injectables/TasksService.html":{}}}],["watch",{"_index":281,"title":{},"body":{"index.html":{}}}],["website",{"_index":312,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":301,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksModule } from './tasks/tasks.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from './config/typeorm.config';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(typeOrmConfig), TasksModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/create-task.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/create-task.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTaskDto {\n  title: string;\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTaskFilterDto.html":{"url":"classes/GetTaskFilterDto.html","title":"class - GetTaskFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTaskFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/dto/get-task-filter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsIn(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/dto/get-task-filter.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskStatus } from '../task-status.enum';\nimport { IsOptional, IsIn, IsNotEmpty } from 'class-validator';\n\nexport class GetTaskFilterDto {\n  @IsOptional()\n  @IsIn([TaskStatus.OPEN, TaskStatus.IN_PROGRESS, TaskStatus.DONE])\n  status: TaskStatus;\n\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                status\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/tasks.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, PrimaryGeneratedColumn, Column, Entity } from 'typeorm';\nimport { TaskStatus } from './task-status.enum';\n\n@Entity()\nexport class Task extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  status: TaskStatus;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskRepository.html":{"url":"classes/TaskRepository.html","title":"class - TaskRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/task.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Repository, EntityRepository } from 'typeorm';\nimport { Task } from './tasks.entity';\n\n@EntityRepository(Task)\nexport class TaskRepository extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskValidationPipe.html":{"url":"classes/TaskValidationPipe.html","title":"class - TaskValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/pipes/task-status-validation.pipe.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PipeTransform\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                allowedStatuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isStatusValid\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            allowedStatuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    TaskStatus.OPEN,\n    TaskStatus.IN_PROGRESS,\n    TaskStatus.DONE,\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isStatusValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isStatusValid(status: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/pipes/task-status-validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\nimport { TaskStatus } from '../task-status.enum';\n\nexport class TaskValidationPipe implements PipeTransform {\n  readonly allowedStatuses = [\n    TaskStatus.OPEN,\n    TaskStatus.IN_PROGRESS,\n    TaskStatus.DONE,\n  ];\n  transform(value: any) {\n    value  = value.toUpperCase();\n    if (!this.isStatusValid(value)) {\n      throw new BadRequestException(`\"${value} is an invalid status\"`);\n    }\n    return value;\n  }\n\n  private isStatusValid(status: any) {\n    const idx = this.allowedStatuses.indexOf(status);\n    return idx !== -1;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \ngetTaskById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Body,\n  Post,\n  Param,\n  Delete,\n  Patch,\n  UsePipes,\n  ValidationPipe,\n  Query,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { TaskValidationPipe } from './pipes/task-status-validation.pipe';\nimport { GetTaskFilterDto } from './dto/get-task-filter.dto';\nimport { Task } from './tasks.entity';\n\n@Controller('tasks')\nexport class TasksController {\n  constructor(private tasksService: TasksService) {}\n\n  // @Get()\n  // getAllTasks(@Query() filterDto: GetTaskFilterDto): Task[] {\n  //   if (Object.keys(filterDto).length) {\n  //     return this.tasksService.getTaskWithFilters(filterDto);\n  //   } else {\n  //     return this.tasksService.getAllTasks();\n  //   }\n  // }\n\n  @Get('/:id')\n  getTaskById(@Param('id', ParseIntPipe) id: number): Promise {\n    return this.tasksService.getTaskById(id);\n  }\n\n  // @Post()\n  // @UsePipes(ValidationPipe)\n  // createTask(@Body() createTaskDto: CreateTaskDto) {\n  //   return this.tasksService.createTask(createTaskDto);\n  // }\n\n  // @Delete('/:id')\n  // deleteTask(@Param() id: string) {\n  //   this.tasksService.deleteTask(id);\n  // }\n\n  // @Patch('/:id/status')\n  // updateTask(\n  //   @Param() id: string,\n  //   @Body('status', new TaskValidationPipe()) status: TaskStatus,\n  // ): Task {\n  //   return this.tasksService.updateTask(id, status);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TaskRepository } from './task.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([TaskRepository]),\n  ],\n  controllers: [TasksController],\n  providers: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTaskById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepository: TaskRepository)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepository\n                                                  \n                                                        \n                                                                        TaskRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTaskById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { GetTaskFilterDto } from './dto/get-task-filter.dto';\nimport { TaskRepository } from './task.repository';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Task } from './tasks.entity';\n@Injectable()\nexport class TasksService {\n  constructor(\n    @InjectRepository(TaskRepository)\n    private taskRepository: TaskRepository,\n  ) {}\n  // getAllTasks(): Task[] {\n  //   return this.tasks;\n  // }\n\n  // getTaskWithFilters(filterDto: GetTaskFilterDto): Task[] {\n  //   const { status, search } = filterDto;\n  //   let tasks = this.getAllTasks();\n\n  //   if (status) {\n  //     tasks = tasks.filter(task => task.status === status);\n  //   }\n  //   if (search) {\n  //     tasks = tasks.filter(\n  //       task =>\n  //         task.title.includes(search) || task.description.includes(search),\n  //     );\n  //   }\n\n  //   return tasks;\n  // }\n\n  async getTaskById(id: number): Promise {\n    const found = await this.taskRepository.findOne(id);\n\n    if (!found) {\n      throw new NotFoundException(`Task with id: ${id} not found`);\n    }\n\n    return found;\n  }\n\n  // createTask(createTaskDto: CreateTaskDto): Task {\n  //   const { title, description } = createTaskDto;\n  //   const task: Task = {\n  //     id: uuid(),\n  //     title,\n  //     description,\n  //     status: TaskStatus.OPEN,\n  //   };\n\n  //   this.tasks.push(task);\n  //   return task;\n  // }\n\n  // deleteTask(id: string): void {\n  //   const found = this.getTaskById(id);\n  //   this.tasks = this.tasks.filter(task => task.id !== found.id);\n  // }\n\n  // updateTask(id: string, status: TaskStatus): Task {\n  //   const task = this.getTaskById(id);\n  //   task.status = status;\n  //   return task;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/dto/get-task-filter.dto.ts\n            \n            class\n            GetTaskFilterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/pipes/task-status-validation.pipe.ts\n            \n            class\n            TaskValidationPipe\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/task.repository.ts\n            \n            class\n            TaskRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            controller\n            TasksController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tasks/tasks.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^15.1.1\n        \n            @nestjs/common : ^6.0.0\n        \n            @nestjs/core : ^6.0.0\n        \n            @nestjs/platform-express : ^6.0.0\n        \n            @nestjs/typeorm : ^6.1.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.10.0\n        \n            pg : ^7.12.1\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.3.3\n        \n            typeorm : ^0.2.18\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/task-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : OPEN\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 DONE\n                            \n                        \n                        \n                            \n                                Value : DONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksModule\n\nTasksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: 'postgres',\n    host: 'localhost',\n    username: 'postgres',\n    password: 'osafo',\n    database: 'taskmanagement',\n    entities: [__dirname + '/../**/*.entity.{js,ts}'],\n    synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
